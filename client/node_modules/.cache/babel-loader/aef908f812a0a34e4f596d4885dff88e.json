{"ast":null,"code":"var _jsxFileName = \"/Users/abadran002/Documents/GitHub/login/client/src/components/Main/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./TodoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [newDescription, setNewDescription] = useState(\"\");\n  const [dueDate, setDueDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  const [assignedTo, setAssignedTo] = useState(\"\");\n  const [taskState, setTaskState] = useState(\"todo\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingTodo, setEditingTodo] = useState(null);\n  const [editedTitle, setEditedTitle] = useState(\"\");\n  const [editedDescription, setEditedDescription] = useState(\"\");\n  const [editedDueDate, setEditedDueDate] = useState(\"\");\n  const [editedState, setEditedState] = useState(\"\");\n  const [editedAssignedTo, setEditedAssignedTo] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filteredState, setFilteredState] = useState(\"all\");\n  const filteredTodos = todos.filter(todo => {\n    const stateMatch = filteredState === \"all\" || todo.state === filteredState;\n    const searchMatch = todo.title.toLowerCase().includes(searchTerm.toLowerCase());\n    return stateMatch && searchMatch;\n  });\n\n  const handleOpenEditForm = todo => {\n    setIsEditing(true);\n    setEditingTodo(todo);\n    setEditedTitle(todo.title);\n    setEditedDescription(todo.description);\n    setEditedDueDate(todo.dueDate);\n    setEditedState(todo.state);\n    setEditedAssignedTo(todo.assignedTo);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n\n  const handleSaveEdit = () => {\n    axios.put(`http://localhost:8080/api/todos/${editingTodo._id}`, {\n      title: editedTitle,\n      description: editedDescription,\n      dueDate: editedDueDate,\n      state: editedState,\n      assignedTo: editedAssignedTo,\n      completed: editingTodo.completed\n    }).then(response => {\n      const updatedTodos = todos.map(todo => {\n        if (todo._id === editingTodo._id) {\n          return response.data;\n        }\n\n        return todo;\n      });\n      setTodos(updatedTodos);\n      cancelEdit();\n    }).catch(error => {\n      console.error(\"Error updating todo:\", error);\n    });\n  };\n\n  const cancelEdit = () => {\n    setIsEditing(false);\n    setEditingTodo(null);\n    setEditedTitle(\"\");\n    setEditedDescription(\"\");\n    setEditedDueDate(\"\");\n    setEditedState(\"\");\n    setEditedAssignedTo(\"\");\n  };\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/todos\").then(response => {\n      setTodos(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching todos:\", error);\n    });\n  }, []);\n\n  const handleStateChange = (id, currentState) => {\n    let newState;\n\n    if (currentState === \"todo\") {\n      newState = \"inprogress\";\n    } else if (currentState === \"inprogress\") {\n      newState = \"done\";\n    } else {\n      // If the current state is \"done\", you may choose to handle it differently\n      // For example, you could set it back to \"todo\" or leave it as is\n      newState = currentState;\n    }\n\n    axios.put(`http://localhost:8080/api/todos/${id}`, {\n      state: newState\n    }).then(response => {\n      const updatedTodos = todos.map(todo => {\n        if (todo._id === id) {\n          todo.state = newState;\n        }\n\n        return todo;\n      });\n      setTodos(updatedTodos);\n    }).catch(error => {\n      console.error(\"Error changing state:\", error);\n    });\n  };\n\n  const handleAddTodo = () => {\n    axios.post(\"http://localhost:8080/api/todos\", {\n      title: newTodo,\n      description: newDescription,\n      dueDate: dueDate,\n      state: taskState,\n      completed: false,\n      assignedTo: assignedTo\n    }).then(response => {\n      setTodos([...todos, response.data]);\n      setNewTodo(\"\");\n      setNewDescription(\"\");\n      setDueDate(new Date().toISOString().split(\"T\")[0]);\n      setAssignedTo(\"\");\n    }).catch(error => {\n      console.error(\"Error adding todo:\", error);\n    });\n  };\n\n  const handleUpdateTodo = (id, completed) => {\n    axios.put(`http://localhost:8080/api/todos/${id}`, {\n      completed: !completed\n    }).then(response => {\n      const updatedTodos = todos.map(todo => {\n        if (todo._id === id) {\n          todo.completed = !completed;\n        }\n\n        return todo;\n      });\n      setTodos(updatedTodos);\n    }).catch(error => {\n      console.error(\"Error updating todo:\", error);\n    });\n  };\n\n  const handleDeleteTodo = id => {\n    axios.delete(`http://localhost:8080/api/todos/${id}`).then(() => {\n      const updatedTodos = todos.filter(todo => todo._id !== id);\n      setTodos(updatedTodos);\n    }).catch(error => {\n      console.error(\"Error deleting todo:\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"white_btn\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"Task title\",\n        value: newTodo,\n        onChange: e => setNewTodo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"Team Member\",\n        value: assignedTo,\n        onChange: e => setAssignedTo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"Description\",\n        value: newDescription,\n        onChange: e => setNewDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"date\",\n        value: dueDate,\n        onChange: e => setDueDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"select\",\n        value: taskState,\n        onChange: e => setTaskState(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"todo\",\n          children: \"Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"inprogress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"done\",\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: handleAddTodo,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"todo-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"checkbox\",\n          type: \"checkbox\",\n          checked: todo.completed,\n          onChange: () => handleUpdateTodo(todo._id, todo.completed)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"todo-title\",\n          children: todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"todo-description\",\n          children: todo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"todo-due-date\",\n          children: [\"Due Date: \", todo.dueDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"todo-state\",\n          children: [\"State: \", todo.state]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"todo-assignee\",\n          children: [\"Assigned To: \", todo.assignedTo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: () => handleDeleteTodo(todo._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"change-state-button\",\n          onClick: () => handleStateChange(todo._id, todo.state),\n          children: \"Change State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), isEditing && editingTodo._id === todo._id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedTitle,\n            onChange: e => setEditedTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedDescription,\n            onChange: e => setEditedDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: editedDueDate,\n            onChange: e => setEditedDueDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editedState,\n            onChange: e => setEditedState(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"todo\",\n              children: \"Todo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"inprogress\",\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"done\",\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Assign to Team Member\",\n            value: editedAssignedTo,\n            onChange: e => setEditedAssignedTo(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveEdit,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel\",\n            onClick: cancelEdit,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-button2\",\n            onClick: () => handleOpenEditForm(todo),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }, this)]\n      }, todo._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"SvDCoC3WLFNe9DsI81rZtEHZuWM=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/abadran002/Documents/GitHub/login/client/src/components/Main/index.jsx"],"names":["React","useState","useEffect","axios","TodoList","todos","setTodos","newTodo","setNewTodo","newDescription","setNewDescription","dueDate","setDueDate","Date","toISOString","split","assignedTo","setAssignedTo","taskState","setTaskState","isEditing","setIsEditing","editingTodo","setEditingTodo","editedTitle","setEditedTitle","editedDescription","setEditedDescription","editedDueDate","setEditedDueDate","editedState","setEditedState","editedAssignedTo","setEditedAssignedTo","searchTerm","setSearchTerm","filteredState","setFilteredState","filteredTodos","filter","todo","stateMatch","state","searchMatch","title","toLowerCase","includes","handleOpenEditForm","description","handleLogout","localStorage","removeItem","window","location","reload","handleSaveEdit","put","_id","completed","then","response","updatedTodos","map","data","cancelEdit","catch","error","console","get","handleStateChange","id","currentState","newState","handleAddTodo","post","handleUpdateTodo","handleDeleteTodo","delete","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./TodoList.css\";\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [newDescription, setNewDescription] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\n    new Date().toISOString().split(\"T\")[0]\n  );\n  const [assignedTo, setAssignedTo] = useState(\"\");\n  const [taskState, setTaskState] = useState(\"todo\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingTodo, setEditingTodo] = useState(null);\n  const [editedTitle, setEditedTitle] = useState(\"\");\n  const [editedDescription, setEditedDescription] = useState(\"\");\n  const [editedDueDate, setEditedDueDate] = useState(\"\");\n  const [editedState, setEditedState] = useState(\"\");\n  const [editedAssignedTo, setEditedAssignedTo] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filteredState, setFilteredState] = useState(\"all\");\n  const filteredTodos = todos.filter((todo) => {\n    const stateMatch = filteredState === \"all\" || todo.state === filteredState;\n    const searchMatch = todo.title\n      .toLowerCase()\n      .includes(searchTerm.toLowerCase());\n    return stateMatch && searchMatch;\n  });\n  const handleOpenEditForm = (todo) => {\n    setIsEditing(true);\n    setEditingTodo(todo);\n    setEditedTitle(todo.title);\n    setEditedDescription(todo.description);\n    setEditedDueDate(todo.dueDate);\n    setEditedState(todo.state);\n    setEditedAssignedTo(todo.assignedTo);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n  const handleSaveEdit = () => {\n    axios\n      .put(`http://localhost:8080/api/todos/${editingTodo._id}`, {\n        title: editedTitle,\n        description: editedDescription,\n        dueDate: editedDueDate,\n        state: editedState,\n        assignedTo: editedAssignedTo,\n        completed: editingTodo.completed,\n      })\n      .then((response) => {\n        const updatedTodos = todos.map((todo) => {\n          if (todo._id === editingTodo._id) {\n            return response.data;\n          }\n          return todo;\n        });\n        setTodos(updatedTodos);\n        cancelEdit();\n      })\n      .catch((error) => {\n        console.error(\"Error updating todo:\", error);\n      });\n  };\n\n  const cancelEdit = () => {\n    setIsEditing(false);\n    setEditingTodo(null);\n    setEditedTitle(\"\");\n    setEditedDescription(\"\");\n    setEditedDueDate(\"\");\n    setEditedState(\"\");\n    setEditedAssignedTo(\"\");\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8080/api/todos\")\n      .then((response) => {\n        setTodos(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching todos:\", error);\n      });\n  }, []);\n\n  const handleStateChange = (id, currentState) => {\n    let newState;\n    if (currentState === \"todo\") {\n      newState = \"inprogress\";\n    } else if (currentState === \"inprogress\") {\n      newState = \"done\";\n    } else {\n      // If the current state is \"done\", you may choose to handle it differently\n      // For example, you could set it back to \"todo\" or leave it as is\n      newState = currentState;\n    }\n\n    axios\n      .put(`http://localhost:8080/api/todos/${id}`, { state: newState })\n      .then((response) => {\n        const updatedTodos = todos.map((todo) => {\n          if (todo._id === id) {\n            todo.state = newState;\n          }\n          return todo;\n        });\n        setTodos(updatedTodos);\n      })\n      .catch((error) => {\n        console.error(\"Error changing state:\", error);\n      });\n  };\n\n  const handleAddTodo = () => {\n    axios\n      .post(\"http://localhost:8080/api/todos\", {\n        title: newTodo,\n        description: newDescription,\n        dueDate: dueDate,\n        state: taskState,\n        completed: false,\n        assignedTo: assignedTo,\n      })\n      .then((response) => {\n        setTodos([...todos, response.data]);\n        setNewTodo(\"\");\n        setNewDescription(\"\");\n        setDueDate(new Date().toISOString().split(\"T\")[0]);\n        setAssignedTo(\"\");\n      })\n      .catch((error) => {\n        console.error(\"Error adding todo:\", error);\n      });\n  };\n\n  const handleUpdateTodo = (id, completed) => {\n    axios\n      .put(`http://localhost:8080/api/todos/${id}`, { completed: !completed })\n      .then((response) => {\n        const updatedTodos = todos.map((todo) => {\n          if (todo._id === id) {\n            todo.completed = !completed;\n          }\n          return todo;\n        });\n        setTodos(updatedTodos);\n      })\n      .catch((error) => {\n        console.error(\"Error updating todo:\", error);\n      });\n  };\n\n  const handleDeleteTodo = (id) => {\n    axios\n      .delete(`http://localhost:8080/api/todos/${id}`)\n      .then(() => {\n        const updatedTodos = todos.filter((todo) => todo._id !== id);\n        setTodos(updatedTodos);\n      })\n      .catch((error) => {\n        console.error(\"Error deleting todo:\", error);\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <nav className=\"navbar\">\n        <h1>Task Management</h1>\n        <button className=\"white_btn\" onClick={handleLogout}>\n          Logout\n        </button>\n      </nav>\n      <h1 className=\"title\">Todo List</h1>\n      <div className=\"input-container\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Task title\"\n          value={newTodo}\n          onChange={(e) => setNewTodo(e.target.value)}\n        />\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Team Member\"\n          value={assignedTo}\n          onChange={(e) => setAssignedTo(e.target.value)}\n        />\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Description\"\n          value={newDescription}\n          onChange={(e) => setNewDescription(e.target.value)}\n        />\n        <input\n          className=\"input\"\n          type=\"date\"\n          value={dueDate}\n          onChange={(e) => setDueDate(e.target.value)}\n        />\n        <select\n          className=\"select\"\n          value={taskState}\n          onChange={(e) => setTaskState(e.target.value)}\n        >\n          <option value=\"todo\">Todo</option>\n          <option value=\"inprogress\">In Progress</option>\n          <option value=\"done\">Done</option>\n        </select>\n        <button className=\"add-button\" onClick={handleAddTodo}>\n          Add\n        </button>\n      </div>\n      <ul className=\"todo-list\">\n        {todos.map((todo) => (\n          <li key={todo._id} className=\"todo-item\">\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              checked={todo.completed}\n              onChange={() => handleUpdateTodo(todo._id, todo.completed)}\n            />\n            <strong className=\"todo-title\">{todo.title}</strong>\n            <p className=\"todo-description\">{todo.description}</p>\n            <p className=\"todo-due-date\">Due Date: {todo.dueDate}</p>\n            <p className=\"todo-state\">State: {todo.state}</p>\n            <p className=\"todo-assignee\">Assigned To: {todo.assignedTo}</p>\n            <button\n              className=\"delete-button\"\n              onClick={() => handleDeleteTodo(todo._id)}\n            >\n              Delete\n            </button>\n            <button\n              className=\"change-state-button\"\n              onClick={() => handleStateChange(todo._id, todo.state)}\n            >\n              Change State\n            </button>\n            {isEditing && editingTodo._id === todo._id ? (\n              <div className=\"edit-form\">\n                <input\n                  type=\"text\"\n                  value={editedTitle}\n                  onChange={(e) => setEditedTitle(e.target.value)}\n                />\n                <input\n                  type=\"text\"\n                  value={editedDescription}\n                  onChange={(e) => setEditedDescription(e.target.value)}\n                />\n                <input\n                  type=\"date\"\n                  value={editedDueDate}\n                  onChange={(e) => setEditedDueDate(e.target.value)}\n                />\n                <select\n                  value={editedState}\n                  onChange={(e) => setEditedState(e.target.value)}\n                >\n                  <option value=\"todo\">Todo</option>\n                  <option value=\"inprogress\">In Progress</option>\n                  <option value=\"done\">Done</option>\n                </select>\n                <input\n                  type=\"text\"\n                  placeholder=\"Assign to Team Member\"\n                  value={editedAssignedTo}\n                  onChange={(e) => setEditedAssignedTo(e.target.value)}\n                />\n                <button onClick={handleSaveEdit}>Save</button>\n                <button className=\"cancel\" onClick={cancelEdit}>\n                  Cancel\n                </button>\n              </div>\n            ) : (\n              <div>\n                {/* Display task details */}\n                {/* ... (previous JSX code) */}\n                <button\n                  className=\"add-button2\"\n                  onClick={() => handleOpenEditForm(todo)}\n                >\n                  Edit\n                </button>\n              </div>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}