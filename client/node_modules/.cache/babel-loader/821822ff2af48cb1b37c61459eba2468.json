{"ast":null,"code":"var _jsxFileName = \"/Users/abadran002/Documents/GitHub/login/client/src/components/Main/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/todos\").then(response => {\n      setTodos(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching todos:\", error);\n    });\n  }, []);\n\n  const handleAddTodo = () => {\n    axios.post(\"http://localhost:8080/api/todos\", {\n      title: newTodo,\n      completed: false\n    }).then(response => {\n      setTodos([...todos, response.data]);\n      setNewTodo(\"\");\n    }).catch(error => {\n      console.error(\"Error adding todo:\", error);\n    });\n  };\n\n  const handleUpdateTodo = (id, completed) => {\n    axios.put(`http://localhost:8080/api/todos/${id}`, {\n      completed: !completed\n    }).then(response => {\n      const updatedTodos = todos.map(todo => {\n        if (todo._id === id) {\n          todo.completed = !completed;\n        }\n\n        return todo;\n      });\n      setTodos(updatedTodos);\n    }).catch(error => {\n      console.error(\"Error updating todo:\", error);\n    });\n  };\n\n  const handleDeleteTodo = id => {\n    axios.delete(`http://localhost:8080/api/todos/${id}`).then(() => {\n      const updatedTodos = todos.filter(todo => todo._id !== id);\n      setTodos(updatedTodos);\n    }).catch(error => {\n      console.error(\"Error deleting todo:\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new todo\",\n      value: newTodo,\n      onChange: e => setNewTodo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.completed,\n          onChange: () => handleUpdateTodo(todo._id, todo.completed)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), todo.title, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTodo(todo._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, todo._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"HJloPNBkTiO05UC91Qpj9J5a300=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/abadran002/Documents/GitHub/login/client/src/components/Main/index.jsx"],"names":["React","useState","useEffect","axios","TodoList","todos","setTodos","newTodo","setNewTodo","get","then","response","data","catch","error","console","handleAddTodo","post","title","completed","handleUpdateTodo","id","put","updatedTodos","map","todo","_id","handleDeleteTodo","delete","filter","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CACFM,GADH,CACO,iCADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClBL,MAAAA,QAAQ,CAACK,QAAQ,CAACC,IAAV,CAAR;AACD,KAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT;;AAWA,QAAME,aAAa,GAAG,MAAM;AAC1Bb,IAAAA,KAAK,CACFc,IADH,CACQ,iCADR,EAC2C;AACvCC,MAAAA,KAAK,EAAEX,OADgC;AAEvCY,MAAAA,SAAS,EAAE;AAF4B,KAD3C,EAKGT,IALH,CAKSC,QAAD,IAAc;AAClBL,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWM,QAAQ,CAACC,IAApB,CAAD,CAAR;AACAJ,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD,KARH,EASGK,KATH,CASUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAc,oBAAd,EAAoCA,KAApC;AACD,KAXH;AAYD,GAbD;;AAeA,QAAMM,gBAAgB,GAAG,CAACC,EAAD,EAAKF,SAAL,KAAmB;AAC1ChB,IAAAA,KAAK,CACFmB,GADH,CACQ,mCAAkCD,EAAG,EAD7C,EACgD;AAAEF,MAAAA,SAAS,EAAE,CAACA;AAAd,KADhD,EAEGT,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMY,YAAY,GAAGlB,KAAK,CAACmB,GAAN,CAAWC,IAAD,IAAU;AACvC,YAAIA,IAAI,CAACC,GAAL,KAAaL,EAAjB,EAAqB;AACnBI,UAAAA,IAAI,CAACN,SAAL,GAAiB,CAACA,SAAlB;AACD;;AACD,eAAOM,IAAP;AACD,OALoB,CAArB;AAMAnB,MAAAA,QAAQ,CAACiB,YAAD,CAAR;AACD,KAVH,EAWGV,KAXH,CAWUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACD,KAbH;AAcD,GAfD;;AAiBA,QAAMa,gBAAgB,GAAIN,EAAD,IAAQ;AAC/BlB,IAAAA,KAAK,CACFyB,MADH,CACW,mCAAkCP,EAAG,EADhD,EAEGX,IAFH,CAEQ,MAAM;AACV,YAAMa,YAAY,GAAGlB,KAAK,CAACwB,MAAN,CAAcJ,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,EAApC,CAArB;AACAf,MAAAA,QAAQ,CAACiB,YAAD,CAAR;AACD,KALH,EAMGV,KANH,CAMUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACD,KARH;AASD,GAVD;;AAYA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,gBAFd;AAGE,MAAA,KAAK,EAAEP,OAHT;AAIE,MAAA,QAAQ,EAAGuB,CAAD,IAAOtB,UAAU,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAQ,MAAA,OAAO,EAAEhB,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAA,gBACGX,KAAK,CAACmB,GAAN,CAAWC,IAAD,iBACT;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,OAAO,EAAEA,IAAI,CAACN,SAFhB;AAGE,UAAA,QAAQ,EAAE,MAAMC,gBAAgB,CAACK,IAAI,CAACC,GAAN,EAAWD,IAAI,CAACN,SAAhB;AAHlC;AAAA;AAAA;AAAA;AAAA,gBADF,EAMGM,IAAI,CAACP,KANR,eAOE;AAAQ,UAAA,OAAO,EAAE,MAAMS,gBAAgB,CAACF,IAAI,CAACC,GAAN,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA,SAASD,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GApFQtB,Q;;KAAAA,Q;AAsFT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8080/api/todos\")\n      .then((response) => {\n        setTodos(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching todos:\", error);\n      });\n  }, []);\n\n  const handleAddTodo = () => {\n    axios\n      .post(\"http://localhost:8080/api/todos\", {\n        title: newTodo,\n        completed: false,\n      })\n      .then((response) => {\n        setTodos([...todos, response.data]);\n        setNewTodo(\"\");\n      })\n      .catch((error) => {\n        console.error(\"Error adding todo:\", error);\n      });\n  };\n\n  const handleUpdateTodo = (id, completed) => {\n    axios\n      .put(`http://localhost:8080/api/todos/${id}`, { completed: !completed })\n      .then((response) => {\n        const updatedTodos = todos.map((todo) => {\n          if (todo._id === id) {\n            todo.completed = !completed;\n          }\n          return todo;\n        });\n        setTodos(updatedTodos);\n      })\n      .catch((error) => {\n        console.error(\"Error updating todo:\", error);\n      });\n  };\n\n  const handleDeleteTodo = (id) => {\n    axios\n      .delete(`http://localhost:8080/api/todos/${id}`)\n      .then(() => {\n        const updatedTodos = todos.filter((todo) => todo._id !== id);\n        setTodos(updatedTodos);\n      })\n      .catch((error) => {\n        console.error(\"Error deleting todo:\", error);\n      });\n  };\n\n  return (\n    <div>\n      <h1>Todo List</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Add a new todo\"\n        value={newTodo}\n        onChange={(e) => setNewTodo(e.target.value)}\n      />\n      <button onClick={handleAddTodo}>Add</button>\n      <ul>\n        {todos.map((todo) => (\n          <li key={todo._id}>\n            <input\n              type=\"checkbox\"\n              checked={todo.completed}\n              onChange={() => handleUpdateTodo(todo._id, todo.completed)}\n            />\n            {todo.title}\n            <button onClick={() => handleDeleteTodo(todo._id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}