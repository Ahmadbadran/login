{"ast":null,"code":"var _jsxFileName = \"/Users/abadran002/Documents/GitHub/login/client/src/components/Main/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [newDescription, setNewDescription] = useState(\"\");\n  const [dueDate, setDueDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  const [taskState, setTaskState] = useState(\"todo\");\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/todos\").then(response => {\n      setTodos(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching todos:\", error);\n    });\n  }, []);\n\n  const handleAddTodo = () => {\n    axios.post(\"http://localhost:8080/api/todos\", {\n      title: newTodo,\n      description: newDescription,\n      dueDate: dueDate,\n      state: taskState,\n      completed: false\n    }).then(response => {\n      setTodos([...todos, response.data]);\n      setNewTodo(\"\");\n      setNewDescription(\"\");\n      setDueDate(new Date().toISOString().split(\"T\")[0]);\n    }).catch(error => {\n      console.error(\"Error adding todo:\", error);\n    });\n  };\n\n  const handleUpdateTodo = (id, completed) => {\n    axios.put(`http://localhost:8080/api/todos/${id}`, {\n      completed: !completed\n    }).then(response => {\n      const updatedTodos = todos.map(todo => {\n        if (todo._id === id) {\n          todo.completed = !completed;\n        }\n\n        return todo;\n      });\n      setTodos(updatedTodos);\n    }).catch(error => {\n      console.error(\"Error updating todo:\", error);\n    });\n  };\n\n  const handleDeleteTodo = id => {\n    axios.delete(`http://localhost:8080/api/todos/${id}`).then(() => {\n      const updatedTodos = todos.filter(todo => todo._id !== id);\n      setTodos(updatedTodos);\n    }).catch(error => {\n      console.error(\"Error deleting todo:\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task title\",\n        value: newTodo,\n        onChange: e => setNewTodo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: newDescription,\n        onChange: e => setNewDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: dueDate,\n        onChange: e => setDueDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: taskState,\n        onChange: e => setTaskState(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"todo\",\n          children: \"Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"inprogress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"done\",\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTodo,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.completed,\n          onChange: () => handleUpdateTodo(todo._id, todo.completed)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: todo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Due Date: \", todo.dueDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"State: \", todo.state]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTodo(todo._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, todo._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"aIxCzQ/x/GL/p9A2xgUI/Hn/A8k=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/abadran002/Documents/GitHub/login/client/src/components/Main/index.jsx"],"names":["React","useState","useEffect","axios","TodoList","todos","setTodos","newTodo","setNewTodo","newDescription","setNewDescription","dueDate","setDueDate","Date","toISOString","split","taskState","setTaskState","get","then","response","data","catch","error","console","handleAddTodo","post","title","description","state","completed","handleUpdateTodo","id","put","updatedTodos","map","todo","_id","handleDeleteTodo","delete","filter","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [newDescription, setNewDescription] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\n    new Date().toISOString().split(\"T\")[0]\n  );\n  const [taskState, setTaskState] = useState(\"todo\");\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8080/api/todos\")\n      .then((response) => {\n        setTodos(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching todos:\", error);\n      });\n  }, []);\n\n  const handleAddTodo = () => {\n    axios\n      .post(\"http://localhost:8080/api/todos\", {\n        title: newTodo,\n        description: newDescription,\n        dueDate: dueDate,\n        state: taskState,\n        completed: false,\n      })\n      .then((response) => {\n        setTodos([...todos, response.data]);\n        setNewTodo(\"\");\n        setNewDescription(\"\");\n        setDueDate(new Date().toISOString().split(\"T\")[0]);\n      })\n      .catch((error) => {\n        console.error(\"Error adding todo:\", error);\n      });\n  };\n\n  const handleUpdateTodo = (id, completed) => {\n    axios\n      .put(`http://localhost:8080/api/todos/${id}`, { completed: !completed })\n      .then((response) => {\n        const updatedTodos = todos.map((todo) => {\n          if (todo._id === id) {\n            todo.completed = !completed;\n          }\n          return todo;\n        });\n        setTodos(updatedTodos);\n      })\n      .catch((error) => {\n        console.error(\"Error updating todo:\", error);\n      });\n  };\n\n  const handleDeleteTodo = (id) => {\n    axios\n      .delete(`http://localhost:8080/api/todos/${id}`)\n      .then(() => {\n        const updatedTodos = todos.filter((todo) => todo._id !== id);\n        setTodos(updatedTodos);\n      })\n      .catch((error) => {\n        console.error(\"Error deleting todo:\", error);\n      });\n  };\n\n  return (\n    <div>\n      <h1>Todo List</h1>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Task title\"\n          value={newTodo}\n          onChange={(e) => setNewTodo(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Description\"\n          value={newDescription}\n          onChange={(e) => setNewDescription(e.target.value)}\n        />\n        <input\n          type=\"date\"\n          value={dueDate}\n          onChange={(e) => setDueDate(e.target.value)}\n        />\n        <select\n          value={taskState}\n          onChange={(e) => setTaskState(e.target.value)}\n        >\n          <option value=\"todo\">Todo</option>\n          <option value=\"inprogress\">In Progress</option>\n          <option value=\"done\">Done</option>\n        </select>\n        <button onClick={handleAddTodo}>Add</button>\n      </div>\n      <ul>\n        {todos.map((todo) => (\n          <li key={todo._id}>\n            <input\n              type=\"checkbox\"\n              checked={todo.completed}\n              onChange={() => handleUpdateTodo(todo._id, todo.completed)}\n            />\n            <strong>{todo.title}</strong>\n            <p>{todo.description}</p>\n            <p>Due Date: {todo.dueDate}</p>\n            <p>State: {todo.state}</p>\n            <button onClick={() => handleDeleteTodo(todo._id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}