{"ast":null,"code":"var _jsxFileName = \"/Users/abadran002/Documents/GitHub/login/client/src/components/Main/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./TodoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [newDescription, setNewDescription] = useState(\"\");\n  const [dueDate, setDueDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  const [assignedTo, setAssignedTo] = useState(\"\");\n  const [taskState, setTaskState] = useState(\"todo\");\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/todos\").then(response => {\n      setTodos(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching todos:\", error);\n    });\n  }, []);\n\n  const handleStateChange = (id, currentState) => {\n    let newState;\n\n    if (currentState === \"todo\") {\n      newState = \"inprogress\";\n    } else if (currentState === \"inprogress\") {\n      newState = \"done\";\n    } else {\n      // If the current state is \"done\", you may choose to handle it differently\n      // For example, you could set it back to \"todo\" or leave it as is\n      newState = currentState;\n    }\n\n    axios.put(`http://localhost:8080/api/todos/${id}`, {\n      state: newState\n    }).then(response => {\n      const updatedTodos = todos.map(todo => {\n        if (todo._id === id) {\n          todo.state = newState;\n        }\n\n        return todo;\n      });\n      setTodos(updatedTodos);\n    }).catch(error => {\n      console.error(\"Error changing state:\", error);\n    });\n  };\n\n  const handleAddTodo = () => {\n    axios.post(\"http://localhost:8080/api/todos\", {\n      title: newTodo,\n      description: newDescription,\n      dueDate: dueDate,\n      state: taskState,\n      completed: false,\n      assignedTo: assignedTo\n    }).then(response => {\n      setTodos([...todos, response.data]);\n      setNewTodo(\"\");\n      setNewDescription(\"\");\n      setDueDate(new Date().toISOString().split(\"T\")[0]);\n      setAssignedTo(\"\");\n    }).catch(error => {\n      console.error(\"Error adding todo:\", error);\n    });\n  };\n\n  const handleUpdateTodo = (id, completed) => {\n    axios.put(`http://localhost:8080/api/todos/${id}`, {\n      completed: !completed\n    }).then(response => {\n      const updatedTodos = todos.map(todo => {\n        if (todo._id === id) {\n          todo.completed = !completed;\n        }\n\n        return todo;\n      });\n      setTodos(updatedTodos);\n    }).catch(error => {\n      console.error(\"Error updating todo:\", error);\n    });\n  };\n\n  const handleDeleteTodo = id => {\n    axios.delete(`http://localhost:8080/api/todos/${id}`).then(() => {\n      const updatedTodos = todos.filter(todo => todo._id !== id);\n      setTodos(updatedTodos);\n    }).catch(error => {\n      console.error(\"Error deleting todo:\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"Task title\",\n        value: newTodo,\n        onChange: e => setNewTodo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"Team Member\",\n        value: assignedTo,\n        onChange: e => setAssignedTo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"Description\",\n        value: newDescription,\n        onChange: e => setNewDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"date\",\n        value: dueDate,\n        onChange: e => setDueDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"select\",\n        value: taskState,\n        onChange: e => setTaskState(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"todo\",\n          children: \"Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"inprogress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"done\",\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: handleAddTodo,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"todo-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"checkbox\",\n          type: \"checkbox\",\n          checked: todo.completed,\n          onChange: () => handleUpdateTodo(todo._id, todo.completed)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"todo-title\",\n          children: todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"todo-description\",\n          children: todo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"todo-due-date\",\n          children: [\"Due Date: \", todo.dueDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"todo-state\",\n          children: [\"State: \", todo.state]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"todo-assignee\",\n          children: [\"Assigned To: \", todo.assignedTo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: () => handleDeleteTodo(todo._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"change-state-button\",\n          onClick: () => handleStateChange(todo._id, todo.state),\n          children: \"Change State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, todo._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"1gtUVsrF7bs4Lrxe488KZ5lY/Hg=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/abadran002/Documents/GitHub/login/client/src/components/Main/index.jsx"],"names":["React","useState","useEffect","axios","TodoList","todos","setTodos","newTodo","setNewTodo","newDescription","setNewDescription","dueDate","setDueDate","Date","toISOString","split","assignedTo","setAssignedTo","taskState","setTaskState","get","then","response","data","catch","error","console","handleStateChange","id","currentState","newState","put","state","updatedTodos","map","todo","_id","handleAddTodo","post","title","description","completed","handleUpdateTodo","handleDeleteTodo","delete","filter","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./TodoList.css\";\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [newDescription, setNewDescription] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\n    new Date().toISOString().split(\"T\")[0]\n  );\n  const [assignedTo, setAssignedTo] = useState(\"\");\n  const [taskState, setTaskState] = useState(\"todo\");\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8080/api/todos\")\n      .then((response) => {\n        setTodos(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching todos:\", error);\n      });\n  }, []);\n\n  const handleStateChange = (id, currentState) => {\n    let newState;\n    if (currentState === \"todo\") {\n      newState = \"inprogress\";\n    } else if (currentState === \"inprogress\") {\n      newState = \"done\";\n    } else {\n      // If the current state is \"done\", you may choose to handle it differently\n      // For example, you could set it back to \"todo\" or leave it as is\n      newState = currentState;\n    }\n\n    axios\n      .put(`http://localhost:8080/api/todos/${id}`, { state: newState })\n      .then((response) => {\n        const updatedTodos = todos.map((todo) => {\n          if (todo._id === id) {\n            todo.state = newState;\n          }\n          return todo;\n        });\n        setTodos(updatedTodos);\n      })\n      .catch((error) => {\n        console.error(\"Error changing state:\", error);\n      });\n  };\n\n  const handleAddTodo = () => {\n    axios\n      .post(\"http://localhost:8080/api/todos\", {\n        title: newTodo,\n        description: newDescription,\n        dueDate: dueDate,\n        state: taskState,\n        completed: false,\n        assignedTo: assignedTo,\n      })\n      .then((response) => {\n        setTodos([...todos, response.data]);\n        setNewTodo(\"\");\n        setNewDescription(\"\");\n        setDueDate(new Date().toISOString().split(\"T\")[0]);\n        setAssignedTo(\"\");\n      })\n      .catch((error) => {\n        console.error(\"Error adding todo:\", error);\n      });\n  };\n\n  const handleUpdateTodo = (id, completed) => {\n    axios\n      .put(`http://localhost:8080/api/todos/${id}`, { completed: !completed })\n      .then((response) => {\n        const updatedTodos = todos.map((todo) => {\n          if (todo._id === id) {\n            todo.completed = !completed;\n          }\n          return todo;\n        });\n        setTodos(updatedTodos);\n      })\n      .catch((error) => {\n        console.error(\"Error updating todo:\", error);\n      });\n  };\n\n  const handleDeleteTodo = (id) => {\n    axios\n      .delete(`http://localhost:8080/api/todos/${id}`)\n      .then(() => {\n        const updatedTodos = todos.filter((todo) => todo._id !== id);\n        setTodos(updatedTodos);\n      })\n      .catch((error) => {\n        console.error(\"Error deleting todo:\", error);\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Todo List</h1>\n      <div className=\"input-container\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Task title\"\n          value={newTodo}\n          onChange={(e) => setNewTodo(e.target.value)}\n        />\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Team Member\"\n          value={assignedTo}\n          onChange={(e) => setAssignedTo(e.target.value)}\n        />\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Description\"\n          value={newDescription}\n          onChange={(e) => setNewDescription(e.target.value)}\n        />\n        <input\n          className=\"input\"\n          type=\"date\"\n          value={dueDate}\n          onChange={(e) => setDueDate(e.target.value)}\n        />\n        <select\n          className=\"select\"\n          value={taskState}\n          onChange={(e) => setTaskState(e.target.value)}\n        >\n          <option value=\"todo\">Todo</option>\n          <option value=\"inprogress\">In Progress</option>\n          <option value=\"done\">Done</option>\n        </select>\n        <button className=\"add-button\" onClick={handleAddTodo}>\n          Add\n        </button>\n      </div>\n      <ul className=\"todo-list\">\n        {todos.map((todo) => (\n          <li key={todo._id} className=\"todo-item\">\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              checked={todo.completed}\n              onChange={() => handleUpdateTodo(todo._id, todo.completed)}\n            />\n            <strong className=\"todo-title\">{todo.title}</strong>\n            <p className=\"todo-description\">{todo.description}</p>\n            <p className=\"todo-due-date\">Due Date: {todo.dueDate}</p>\n            <p className=\"todo-state\">State: {todo.state}</p>\n            <p className=\"todo-assignee\">Assigned To: {todo.assignedTo}</p>\n            <button\n              className=\"delete-button\"\n              onClick={() => handleDeleteTodo(todo._id)}\n            >\n              Delete\n            </button>\n            <button\n              className=\"change-state-button\"\n              onClick={() => handleStateChange(todo._id, todo.state)}\n            >\n              Change State\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}